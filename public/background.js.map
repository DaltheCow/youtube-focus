{"version":3,"sources":["webpack:///webpack/bootstrap 5ebdb4b6a1fc320e5aa4","webpack:///./constants.js","webpack:///./modules/storage.js","webpack:///./util.js","webpack:///./background/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC7DA;AAAA;AAAA;;AAEA,kGAAyG,GAAG;AAAA;AAAA;;;;;;;;;;ACF5G;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AAAA;AAAA;;AAEA;AACA;AACA,YAAY;AACZ,GAAG;AACH;AACA,WAAW,eAAe;AAC1B;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AAAA;AAAA;;;;;;;;;;;ACnCuB;;AAEvB;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;ACRgD;AACf;AACf;;AAElB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kCAAkC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,aAAa,mCAAmC;AAChD,aAAa,2BAA2B;AACxC;AACA,eAAe,0BAA0B;AACzC;AACA;AACA,iDAAiD;AACjD;AACA,mDAAmD;AACnD,iGAAuC,0BAA0B;AACjE;AACA;AACA;AACA,iDAAiD;AACjD,oDAAoD;AACpD,mDAAmD;AACnD,uDAAuD;AACvD,iGAAuC,0BAA0B;AACjE,oGAA0C,gCAAgC;AAC1E;AACA;AACA;AACA,oDAAoD;AACpD;AACA,uDAAuD;AACvD,oGAA0C,gCAAgC;AAC1E;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,0DAA0D;AACrG,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;;AAGD;AACA;AACA,WAAW,qBAAqB;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP,4BAA4B;AAC5B;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA,OAAO,mGAAmG;;AAE1G;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,0CAA0C;AAC1C,oBAAoB;AACpB;AACA;AACA,oFAA0B,WAAW;AACrC;AACA,8FAAoC,YAAY;AAChD,GAAG;AACH;AACA,iGAAuC,eAAe;AACtD,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,SAAS,kCAAkC;AAC3C;AACA;AACA,sCAAsC,0BAA0B;AAChE;AACA,GAAG;AACH;AACA,sCAAsC,yBAAyB;AAC/D;AACA,GAAG;AACH;AACA,sCAAsC,4BAA4B;AAClE;;AAEA;AACA;;AAEA;AACA,mBAAmB;AACnB,sBAAsB;AACtB;AACA;AACA,GAAG;AACH;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,GAAG;AACH;;AAEA;AACA,SAAS,kCAAkC;AAC3C;AACA;AACA,+BAA+B,wCAAwC;AACvE;AACA","file":"background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 35);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5ebdb4b6a1fc320e5aa4","export const YT_REGEX = /https:\\/\\/www.youtube.com\\/*/;\n\nexport const VID_PL_REGEX = /https:\\/\\/www\\.youtube\\.com\\/(playlist\\?list=(.+))?(watch\\?v=([A-Za-z0-9_-]{11}))?(&t=[^&]+)?(&index[^&]+)?(&list=([^&]+)?)?(&.*)?/;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./constants.js\n// module id = 26\n// module chunks = 0 3","export const getStorage = (key, callback) => {\n  const storage = (key === 'settings' ? chrome.storage.sync : chrome.storage.local);\n  let promise = new Promise(resolve => {\n    storage.get(key, (data) => resolve(data));\n  });\n  return (callback ? promise.then(callback) : promise);\n};\n\nexport const setStorage = (key, object, callback) => {\n  const storage = (key === 'settings' ? chrome.storage.sync : chrome.storage.local);\n  let promise = new Promise(resolve => {\n    storage.set(object, () => {\n      storage.get(key, data => {\n        return resolve(data);\n      });\n    });\n  });\n  return (callback ? promise.then(callback) : promise);\n};\n\nexport const getStorageAll = (keys, callback) => {\n  const storagesKeys = keys.map(key => {\n    return { key, storage: chrome.storage[(key === 'settings' ? 'sync' : 'local')] };\n  });\n  let promise = Promise.all(storagesKeys.map(storageKey => {\n    const { storage, key } = storageKey;\n    return new Promise(resolve => {\n      storage.get(key, (data) => resolve(data));\n    });\n  })).then(res => {\n    const data = {};\n    res.forEach((item, idx) => data[keys[idx]] = item[keys[idx]]);\n    return data;\n  });\n  return (callback ? promise.then(callback) : promise);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/storage.js\n// module id = 27\n// module chunks = 0 1 3","import { VID_PL_REGEX } from \"./constants\";\n\nexport const vidOrPL = (url) => {\n  const res = url.match(VID_PL_REGEX);\n  return { isPL: Boolean(res[1] || res[7]),\n           PlID: res[2] || res[8],\n           isVid: Boolean((res[3] && res[4])),\n           vidID: res[4] };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./util.js\n// module id = 28\n// module chunks = 0 3","import { getStorage, setStorage, getStorageAll } from \"../modules/storage\";\nimport { YT_REGEX, VID_PL_REGEX } from \"../constants\";\nimport { vidOrPL } from \"../util\";\n\n// chrome.storage.sync.clear(() => console.log(\"cleared\"));\n\nchrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {\n  const tabId = sender.tab.id,\n    url = sender.tab.url;\n  switch(request.action) {\n    case 'showPageAction': {\n      // need to turn it off when navigating to non valid page, maybe in on tabs updated\n      chrome.tabs.query({active: true, currentWindow: true}, function(tabs) {\n        if (tabs.length > 0) {\n          const isVidOrPl = vidOrPL(tabs[0].url);\n          if (isVidOrPl.isPL || isVidOrPl.isVid) {\n            chrome.pageAction.show(tabs[0].id);\n          }\n        }\n      });\n      const isVidOrPl = vidOrPL(url);\n      if (isVidOrPl.isPL || isVidOrPl.isVid) {\n        chrome.pageAction.show(tabId);\n      }\n\n      break;\n    }\n    case 'getState': {\n      getStorage('settings', function(data) {\n        if (data.settings.enableContentBlocking) {\n            blockContent(tabId, url, data.settings.allowedVideos, data.settings.allowedPlaylists);\n        }\n        updateStorageInfoMsg(tabId, url, data.settings.allowedVideos, data.settings.allowedPlaylists);\n        ['hideRelated', 'hideComments', 'hideEndScreen'].forEach(field => {\n          sendStateToContent(data.settings[field], field, tabId);\n        });\n      });\n      break;\n    }\n    //figure out how to deal with incoming message with ytInfo from window\n    case 'receiveStorageInfo': {\n      const { url, type, vidInfo, plInfo, info } = request;\n      const { isPL, PlID, isVid, vidID } = vidOrPL(url);\n        getStorage(['plStorage', 'videoStorage'], function(data) {\n          let { plStorage, videoStorage } = data;\n          switch(type) {\n            case 'receivePL': {\n              let newPLStorage = Object.assign({}, plStorage);\n              newPLStorage[PlID] = newPLStorage[PlID] || {};\n              newPLStorage[PlID] = Object.assign({}, plStorage[PlID], info);\n              setStorage('plStorage', { plStorage: newPLStorage });\n              break;\n            }\n            case 'receivePL2': {\n              let newPLStorage = Object.assign({}, plStorage);\n              let newVideoStorage = Object.assign({}, videoStorage);\n              newPLStorage[PlID] = Object.assign({}, newPLStorage[PlID], plInfo);\n              newVideoStorage[vidID] = Object.assign({}, newVideoStorage[vidID], vidInfo);\n              setStorage('plStorage', { plStorage: newPLStorage });\n              setStorage('videoStorage', { videoStorage: newVideoStorage });\n              break;\n            }\n            case 'receiveVideo': {\n              let newVideoStorage = Object.assign({}, videoStorage);\n              newVideoStorage[vidID] = newVideoStorage[vidID] || {};\n              newVideoStorage[vidID] = Object.assign({}, videoStorage[vidID], info);\n              setStorage('videoStorage', { videoStorage: newVideoStorage });\n            }\n          }\n        });\n      break;\n    }\n    case 'log': {\n      console.log(request);\n    }\n  }\n});\n\nchrome.tabs.query({}, function(tabs) {\n  const regex = /https:\\/\\/www.youtube.com\\/*/;\n  const ytTabs = Array.from(tabs)\n  .filter(tab => regex.test(tab.url));\n  ytTabs.forEach(tab => {\n    chrome.pageAction.show(tab.id);\n  });\n});\n\n(function() {\n  getStorageAll(['settings', 'videoStorage', 'plStorage'])\n  .then(data => {\n    ensureSettings(data, (newData) => {\n      if (newData.settings.enableContentBlocking) {\n        chrome.tabs.query({}, function(tabs) {\n          const regex = /https:\\/\\/www.youtube.com\\/*/;\n          const ytTabs = Array.from(tabs)\n          .filter(tab => regex.test(tab.url));\n          ytTabs.forEach(tab => {\n            blockContent(tab.id, tab.url, newData.settings.allowedVideos, newData.settings.allowedPlaylists);\n          });\n        });\n      }\n      ['hideRelated', 'hideComments', 'hideEndScreen'].forEach(field => {\n        sendStateToContent(newData.settings[field], field);\n      });\n    });\n  });\n})();\n\nchrome.tabs.onUpdated.addListener(function(tabId, changeInfo) {\n  if (changeInfo.url && YT_REGEX.test(changeInfo.url)) {\n    const videoRegex = /https:\\/\\/www.youtube.com\\/watch*/;\n    getStorage('settings', function(data) {\n      if (videoRegex.test(changeInfo.url)) {\n        ['hideRelated', 'hideComments', 'hideEndScreen'].forEach(field => {\n          chrome.tabs.sendMessage( tabId, { action: 'hideField', value: data.settings[field], field });\n        });\n      }\n      updateStorageInfoMsg(tabId, changeInfo.url, data.settings.allowedVideos, data.settings.allowedPlaylists);\n\n      if (data.settings.enableContentBlocking) {\n        blockContent(tabId, changeInfo.url, data.settings.allowedVideos, data.settings.allowedPlaylists);\n      }\n  });\n\n  }\n});\n\n\nchrome.storage.onChanged.addListener(function(changes, namespace) {\n  if (changes.settings) {\n    const { oldValue, newValue } = changes.settings;\n    \n    if (oldValue && newValue) {\n      const {\n        enableContentBlocking: oEnableContentBlocking,\n        allowedVideos: oAllowedVideos,\n        allowedPlaylists: oAllowedPlaylists,\n        hideEndScreen: oHideEndScreen,\n        hideRelated: oHideRelated,\n        hideComments: oHideComments\n      } = oldValue;\n      const {\n        enableContentBlocking: nEnableContentBlocking,\n        allowedVideos: nAllowedVideos,\n        allowedPlaylists: nAllowedPlaylists,\n        hideEndScreen: nHideEndScreen,\n        hideRelated: nHideRelated,\n        hideComments: nHideComments\n      } = newValue;\n      const blockEnabled = !oEnableContentBlocking && nEnableContentBlocking,\n            vidRemoved = oAllowedVideos.length > nAllowedVideos.length,\n            plRemoved = oAllowedPlaylists.length > nAllowedPlaylists.length,\n            blockVids = (blockEnabled) || (nEnableContentBlocking && (vidRemoved || plRemoved));\n      if (oHideRelated !== nHideRelated) {\n        sendStateToContent(nHideRelated, 'hideRelated');\n      } else if (oHideComments !== nHideComments) {\n        sendStateToContent(nHideComments, 'hideComments');\n      } else if (oHideEndScreen !== nHideEndScreen) {\n        sendStateToContent(nHideEndScreen, 'hideEndScreen');\n      } else if (blockVids) {\n        chrome.tabs.query({}, function(tabs) {\n          Array.from(tabs).filter(tab => YT_REGEX.test(tab.url)).forEach(tab => {\n            blockContent(tab.id, tab.url, nAllowedVideos, nAllowedPlaylists);\n          });\n        });\n      }\n    }\n  }\n});\n\nfunction ensureSettings(data, callback) {\n  let prevSettings = data.settings || {};\n  let videoStorage = data.videoStorage || {};\n  let plStorage = data.plStorage || {};\n\n  let { hideRelated, hideComments, hideEndScreen, enableContentBlocking, allowedVideos, allowedPlaylists } = prevSettings;\n\n  hideRelated = Boolean(hideRelated);\n  hideComments = Boolean(hideComments);\n  hideEndScreen = Boolean(hideEndScreen);\n  enableContentBlocking = Boolean(enableContentBlocking);\n  allowedVideos = allowedVideos === undefined ? [] : allowedVideos;\n  allowedPlaylists = allowedPlaylists === undefined ? [] : allowedPlaylists;\n  videoStorage = videoStorage === undefined ? {} : videoStorage;\n  plStorage = plStorage === undefined ? {} : plStorage;\n  const settings = { hideRelated, hideComments, hideEndScreen, enableContentBlocking, allowedVideos, allowedPlaylists };\n  //update storage use to new set function\n  let newData = {};\n  setStorage('settings', { settings }).then(data => {\n    newData = Object.assign(newData, data);\n    return setStorage('plStorage', { plStorage });\n  }).then(data => {\n    newData = Object.assign(newData, data);\n    return setStorage('videoStorage', { videoStorage });\n  }).then(data => {\n    newData = Object.assign(newData, data);\n    callback(newData);\n  });\n  //check to makesure this works!\n}\n\nfunction updateStorageInfoMsg(tabId, url, allowedVideos, allowedPlaylists) {\n  const { isPL, PlID, isVid, vidID, notYt } = vidOrPL(url);\n  if ( isPL && isVid) {\n    if (allowedVideos.includes(vidID) || allowedPlaylists.includes(PlID)) {\n      chrome.tabs.sendMessage(tabId, { action: 'gatherPLInfo2' });\n    }\n  } else if (isPL) {\n    if (allowedPlaylists.includes(PlID)) {\n      chrome.tabs.sendMessage(tabId, { action: 'gatherPLInfo' });\n    }\n  } else if (isVid) {\n    if (allowedVideos.includes(vidID)) {\n      chrome.tabs.sendMessage(tabId, { action: 'gatherVideoInfo' });\n    }\n\n  }\n}\n\nfunction logToContent(text) {\n  const message = { action: 'log', message: text };\n  chrome.tabs.query({}, function(tabs) {\n    Array.from(tabs)\n    .forEach(tab => chrome.tabs.sendMessage(tab.id, message));\n  });\n}\n\nfunction sendStateToContent(value, field, tabId) {\n  var message = { action: 'hideField', value, field };\n  if (tabId) {\n    chrome.tabs.sendMessage(tabId, message);\n  }\n  chrome.tabs.query({}, function(tabs) {\n    Array.from(tabs)\n    .forEach(tab => chrome.tabs.sendMessage(tab.id, message));\n  });\n}\n\nfunction blockContent(tabId, url, allowedVideos, allowedPlaylists) {\n  const { isPL, PlID, isVid, vidID, notYt } = vidOrPL(url);\n  const pageIsntAllowed = (((isVid && !isPL) && !allowedVideos.includes(vidID)) || (isPL && !allowedPlaylists.includes(PlID)) || (!isVid && !isPL && !notYt));\n  if (pageIsntAllowed) {\n    chrome.tabs.update(tabId, {url: 'not_available/not_available.html'});\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./background/index.js\n// module id = 35\n// module chunks = 3"],"sourceRoot":""}